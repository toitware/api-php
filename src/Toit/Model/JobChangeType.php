<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: toit/model/job.proto

namespace Toit\Model;

use UnexpectedValueException;

/**
 * Protobuf type <code>toit.model.JobChangeType</code>
 */
class JobChangeType
{
    /**
     * Generated from protobuf enum <code>JOB_CHANGE_UNKNOWN = 0;</code>
     */
    const JOB_CHANGE_UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>JOB_CHANGE_ADDED = 1;</code>
     */
    const JOB_CHANGE_ADDED = 1;
    /**
     * Generated from protobuf enum <code>JOB_CHANGE_DELETED = 2;</code>
     */
    const JOB_CHANGE_DELETED = 2;
    /**
     * Generated from protobuf enum <code>JOB_CHANGE_CHANGED = 3;</code>
     */
    const JOB_CHANGE_CHANGED = 3;

    private static $valueToName = [
        self::JOB_CHANGE_UNKNOWN => 'JOB_CHANGE_UNKNOWN',
        self::JOB_CHANGE_ADDED => 'JOB_CHANGE_ADDED',
        self::JOB_CHANGE_DELETED => 'JOB_CHANGE_DELETED',
        self::JOB_CHANGE_CHANGED => 'JOB_CHANGE_CHANGED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

