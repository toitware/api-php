<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: toit/model/job.proto

namespace Toit\Model;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>toit.model.JobTriggers</code>
 */
class JobTriggers extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.toit.model.OnInstallTrigger on_install = 1;</code>
     */
    protected $on_install = null;
    /**
     * Generated from protobuf field <code>.toit.model.OnBootTrigger on_boot = 2;</code>
     */
    protected $on_boot = null;
    /**
     * Generated from protobuf field <code>.toit.model.IntervalTrigger interval = 3;</code>
     */
    protected $interval = null;
    /**
     * Generated from protobuf field <code>.toit.model.CronTrigger cron = 4;</code>
     */
    protected $cron = null;
    /**
     * Generated from protobuf field <code>.toit.model.MovementTrigger movement = 5 [deprecated = true];</code>
     * @deprecated
     */
    protected $movement = null;
    /**
     * Generated from protobuf field <code>.toit.model.ButtonTrigger button = 6 [deprecated = true];</code>
     * @deprecated
     */
    protected $button = null;
    /**
     * Generated from protobuf field <code>.toit.model.NetworkTrigger network = 7;</code>
     */
    protected $network = null;
    /**
     * Generated from protobuf field <code>.toit.model.PubSubTrigger pubsub = 8;</code>
     */
    protected $pubsub = null;
    /**
     * Generated from protobuf field <code>.toit.model.GPIOTrigger gpio = 9;</code>
     */
    protected $gpio = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Toit\Model\OnInstallTrigger $on_install
     *     @type \Toit\Model\OnBootTrigger $on_boot
     *     @type \Toit\Model\IntervalTrigger $interval
     *     @type \Toit\Model\CronTrigger $cron
     *     @type \Toit\Model\MovementTrigger $movement
     *     @type \Toit\Model\ButtonTrigger $button
     *     @type \Toit\Model\NetworkTrigger $network
     *     @type \Toit\Model\PubSubTrigger $pubsub
     *     @type \Toit\Model\GPIOTrigger $gpio
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Toit\Model\Job::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.toit.model.OnInstallTrigger on_install = 1;</code>
     * @return \Toit\Model\OnInstallTrigger|null
     */
    public function getOnInstall()
    {
        return $this->on_install;
    }

    public function hasOnInstall()
    {
        return isset($this->on_install);
    }

    public function clearOnInstall()
    {
        unset($this->on_install);
    }

    /**
     * Generated from protobuf field <code>.toit.model.OnInstallTrigger on_install = 1;</code>
     * @param \Toit\Model\OnInstallTrigger $var
     * @return $this
     */
    public function setOnInstall($var)
    {
        GPBUtil::checkMessage($var, \Toit\Model\OnInstallTrigger::class);
        $this->on_install = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.toit.model.OnBootTrigger on_boot = 2;</code>
     * @return \Toit\Model\OnBootTrigger|null
     */
    public function getOnBoot()
    {
        return $this->on_boot;
    }

    public function hasOnBoot()
    {
        return isset($this->on_boot);
    }

    public function clearOnBoot()
    {
        unset($this->on_boot);
    }

    /**
     * Generated from protobuf field <code>.toit.model.OnBootTrigger on_boot = 2;</code>
     * @param \Toit\Model\OnBootTrigger $var
     * @return $this
     */
    public function setOnBoot($var)
    {
        GPBUtil::checkMessage($var, \Toit\Model\OnBootTrigger::class);
        $this->on_boot = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.toit.model.IntervalTrigger interval = 3;</code>
     * @return \Toit\Model\IntervalTrigger|null
     */
    public function getInterval()
    {
        return $this->interval;
    }

    public function hasInterval()
    {
        return isset($this->interval);
    }

    public function clearInterval()
    {
        unset($this->interval);
    }

    /**
     * Generated from protobuf field <code>.toit.model.IntervalTrigger interval = 3;</code>
     * @param \Toit\Model\IntervalTrigger $var
     * @return $this
     */
    public function setInterval($var)
    {
        GPBUtil::checkMessage($var, \Toit\Model\IntervalTrigger::class);
        $this->interval = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.toit.model.CronTrigger cron = 4;</code>
     * @return \Toit\Model\CronTrigger|null
     */
    public function getCron()
    {
        return $this->cron;
    }

    public function hasCron()
    {
        return isset($this->cron);
    }

    public function clearCron()
    {
        unset($this->cron);
    }

    /**
     * Generated from protobuf field <code>.toit.model.CronTrigger cron = 4;</code>
     * @param \Toit\Model\CronTrigger $var
     * @return $this
     */
    public function setCron($var)
    {
        GPBUtil::checkMessage($var, \Toit\Model\CronTrigger::class);
        $this->cron = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.toit.model.MovementTrigger movement = 5 [deprecated = true];</code>
     * @return \Toit\Model\MovementTrigger|null
     * @deprecated
     */
    public function getMovement()
    {
        @trigger_error('movement is deprecated.', E_USER_DEPRECATED);
        return $this->movement;
    }

    public function hasMovement()
    {
        @trigger_error('movement is deprecated.', E_USER_DEPRECATED);
        return isset($this->movement);
    }

    public function clearMovement()
    {
        @trigger_error('movement is deprecated.', E_USER_DEPRECATED);
        unset($this->movement);
    }

    /**
     * Generated from protobuf field <code>.toit.model.MovementTrigger movement = 5 [deprecated = true];</code>
     * @param \Toit\Model\MovementTrigger $var
     * @return $this
     * @deprecated
     */
    public function setMovement($var)
    {
        @trigger_error('movement is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Toit\Model\MovementTrigger::class);
        $this->movement = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.toit.model.ButtonTrigger button = 6 [deprecated = true];</code>
     * @return \Toit\Model\ButtonTrigger|null
     * @deprecated
     */
    public function getButton()
    {
        @trigger_error('button is deprecated.', E_USER_DEPRECATED);
        return $this->button;
    }

    public function hasButton()
    {
        @trigger_error('button is deprecated.', E_USER_DEPRECATED);
        return isset($this->button);
    }

    public function clearButton()
    {
        @trigger_error('button is deprecated.', E_USER_DEPRECATED);
        unset($this->button);
    }

    /**
     * Generated from protobuf field <code>.toit.model.ButtonTrigger button = 6 [deprecated = true];</code>
     * @param \Toit\Model\ButtonTrigger $var
     * @return $this
     * @deprecated
     */
    public function setButton($var)
    {
        @trigger_error('button is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Toit\Model\ButtonTrigger::class);
        $this->button = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.toit.model.NetworkTrigger network = 7;</code>
     * @return \Toit\Model\NetworkTrigger|null
     */
    public function getNetwork()
    {
        return $this->network;
    }

    public function hasNetwork()
    {
        return isset($this->network);
    }

    public function clearNetwork()
    {
        unset($this->network);
    }

    /**
     * Generated from protobuf field <code>.toit.model.NetworkTrigger network = 7;</code>
     * @param \Toit\Model\NetworkTrigger $var
     * @return $this
     */
    public function setNetwork($var)
    {
        GPBUtil::checkMessage($var, \Toit\Model\NetworkTrigger::class);
        $this->network = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.toit.model.PubSubTrigger pubsub = 8;</code>
     * @return \Toit\Model\PubSubTrigger|null
     */
    public function getPubsub()
    {
        return $this->pubsub;
    }

    public function hasPubsub()
    {
        return isset($this->pubsub);
    }

    public function clearPubsub()
    {
        unset($this->pubsub);
    }

    /**
     * Generated from protobuf field <code>.toit.model.PubSubTrigger pubsub = 8;</code>
     * @param \Toit\Model\PubSubTrigger $var
     * @return $this
     */
    public function setPubsub($var)
    {
        GPBUtil::checkMessage($var, \Toit\Model\PubSubTrigger::class);
        $this->pubsub = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.toit.model.GPIOTrigger gpio = 9;</code>
     * @return \Toit\Model\GPIOTrigger|null
     */
    public function getGpio()
    {
        return $this->gpio;
    }

    public function hasGpio()
    {
        return isset($this->gpio);
    }

    public function clearGpio()
    {
        unset($this->gpio);
    }

    /**
     * Generated from protobuf field <code>.toit.model.GPIOTrigger gpio = 9;</code>
     * @param \Toit\Model\GPIOTrigger $var
     * @return $this
     */
    public function setGpio($var)
    {
        GPBUtil::checkMessage($var, \Toit\Model\GPIOTrigger::class);
        $this->gpio = $var;

        return $this;
    }

}

