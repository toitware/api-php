<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: toit/api/program.proto

namespace Toit\Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>toit.api.RunRequest</code>
 */
class RunRequest extends \Google\Protobuf\Internal\Message
{
    protected $payload;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Toit\Api\RunStart $start
     *     @type \Toit\Api\RunInput $input
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Toit\Api\Program::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.toit.api.RunStart start = 1;</code>
     * @return \Toit\Api\RunStart|null
     */
    public function getStart()
    {
        return $this->readOneof(1);
    }

    public function hasStart()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.toit.api.RunStart start = 1;</code>
     * @param \Toit\Api\RunStart $var
     * @return $this
     */
    public function setStart($var)
    {
        GPBUtil::checkMessage($var, \Toit\Api\RunStart::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.toit.api.RunInput input = 2;</code>
     * @return \Toit\Api\RunInput|null
     */
    public function getInput()
    {
        return $this->readOneof(2);
    }

    public function hasInput()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.toit.api.RunInput input = 2;</code>
     * @param \Toit\Api\RunInput $var
     * @return $this
     */
    public function setInput($var)
    {
        GPBUtil::checkMessage($var, \Toit\Api\RunInput::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getPayload()
    {
        return $this->whichOneof("payload");
    }

}

