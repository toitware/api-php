<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: toit/api/data.proto

namespace Toit\Api;

use UnexpectedValueException;

/**
 * Protobuf type <code>toit.api.DataType</code>
 */
class DataType
{
    /**
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * data is encoded protobuf as model.LogData
     *
     * Generated from protobuf enum <code>LOGS = 1;</code>
     */
    const LOGS = 1;
    /**
     * data is encoded protobuf as model.MetricsData
     *
     * Generated from protobuf enum <code>METRICS = 2;</code>
     */
    const METRICS = 2;
    /**
     * data is encoded protobuf as model.TopicData
     *
     * Generated from protobuf enum <code>TOPIC_DATA = 3;</code>
     */
    const TOPIC_DATA = 3;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::LOGS => 'LOGS',
        self::METRICS => 'METRICS',
        self::TOPIC_DATA => 'TOPIC_DATA',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

