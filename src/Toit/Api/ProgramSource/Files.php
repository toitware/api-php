<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: toit/api/program.proto

namespace Toit\Api\ProgramSource;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>toit.api.ProgramSource.Files</code>
 */
class Files extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string entry_filename = 1;</code>
     */
    protected $entry_filename = '';
    /**
     * Generated from protobuf field <code>map<string, bytes> files = 2;</code>
     */
    private $files;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $entry_filename
     *     @type array|\Google\Protobuf\Internal\MapField $files
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Toit\Api\Program::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string entry_filename = 1;</code>
     * @return string
     */
    public function getEntryFilename()
    {
        return $this->entry_filename;
    }

    /**
     * Generated from protobuf field <code>string entry_filename = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setEntryFilename($var)
    {
        GPBUtil::checkString($var, True);
        $this->entry_filename = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>map<string, bytes> files = 2;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getFiles()
    {
        return $this->files;
    }

    /**
     * Generated from protobuf field <code>map<string, bytes> files = 2;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setFiles($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->files = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Files::class, \Toit\Api\ProgramSource_Files::class);

