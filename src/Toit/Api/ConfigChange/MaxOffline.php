<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: toit/api/device.proto

namespace Toit\Api\ConfigChange;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>toit.api.ConfigChange.MaxOffline</code>
 */
class MaxOffline extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.google.protobuf.Duration max_offline = 1;</code>
     */
    protected $max_offline = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Duration $max_offline
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Toit\Api\Device::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Duration max_offline = 1;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getMaxOffline()
    {
        return $this->max_offline;
    }

    public function hasMaxOffline()
    {
        return isset($this->max_offline);
    }

    public function clearMaxOffline()
    {
        unset($this->max_offline);
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Duration max_offline = 1;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMaxOffline($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->max_offline = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(MaxOffline::class, \Toit\Api\ConfigChange_MaxOffline::class);

